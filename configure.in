AC_PREREQ(2.58)
AC_INIT([Sequview],[0.0.3])

AC_CANONICAL_HOST
AC_CANONICAL_TARGET([])

AM_INIT_AUTOMAKE
AC_CONFIG_HEADERS([config.h])

#these are for the summary -section
cflags_b="$CFLAGS"
ldflags_b="$LDFLAGS"
cppflags_b="$CPPFLAGS"

# Checks for programs.
AC_PROG_CC_STDC
AC_PROG_GCC_TRADITIONAL
AM_PROG_CC_C_O
AC_PROG_LN_S

# Checks for libraries.
AC_GNU_SOURCE


# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([fcntl.h libintl.h limits.h stdint.h stdlib.h \
  string.h unistd.h])

# Checks for library functions.
AC_REPLACE_FNMATCH
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([atexit dup2 memset strcasecmp strdup strerror strtol])

AC_CHECK_FUNC(strndup, 
[
  AC_DEFINE_UNQUOTED(HAVE_STRNDUP,1,[the strndup function])
  ADD_CFLAGS="-D_GNU_SOURCE"
])

AC_PATH_X

PKG_PROG_PKG_CONFIG

#########################################################

#imlib2
#this version is a guess, this program may work with versions lower than this
imlib2_modules="imlib2 >= 1.1.2"
PKG_CHECK_MODULES([IM2], [$imlib2_modules])

#########################################################

#gtk
#gtk_window_fullscreen() requires at least 2.2.0
#the new fileselector (file_chooser) requires at least 2.4.0
#gtk2_fullscreen=1

#AC_ARG_ENABLE(gtk2-fullscreen,
#  [  --disable-gtk2-fullscreen	Disables gtk_window_fullscreen()],
#  [
#    if test ${enableval} = "no"; then
#      #lower the requirements
#      gtk2_fullscreen=0;
#      gtk_modules="gtk+-2.0 >= 2.0.0";
#      echo "disabling gtk_window_fullscreen()"
#    fi
#  ],
#)

#AH_TEMPLATE(GTK2_WINDOW_FULLSCREEN,[Is function gtk_window_fullscreen() used.])
#if test ${gtk2_fullscreen} = 1; then
#  AC_DEFINE_UNQUOTED(GTK2_WINDOW_FULLSCREEN, 1)
#fi

gtk_modules="glib-2.0 >= 2.4.0 gtk+-2.0 >= 2.4.0"
PKG_CHECK_MODULES([GTK2], [$gtk_modules])

#########################################################

#prefix is NONE (if --prefix is not used) until AC_OUTPUT (hmm ?)
test "$prefix" = "NONE" && prefix="/usr/local"

#versioninformation etc.
pkg_config="pkg-config"
imlib2_ver=`${pkg_config} --modversion imlib2`
gtk2_ver=`${pkg_config} --modversion gtk+-2.0`

#temporary
real_version="${PACKAGE_VERSION}-rc2"

AC_DEFINE_UNQUOTED(REAL_VERSION, "${real_version}",[An irritating workaround.])
AC_DEFINE_UNQUOTED(IMLIB2_VERSION, "${imlib2_ver}",[ ])
AC_DEFINE_UNQUOTED(GTK2_VERSION, "${gtk2_ver}",[ ])
AC_DEFINE_UNQUOTED(PREFIX, "${prefix}",[ ])


#########################################################

#generate the output
CFLAGS="$CFLAGS $ADD_CFLAGS $IM2_CFLAGS $GTK2_CFLAGS"
LDFLAGS="$LDFLAGS $IM2_LIBS $GTK2_LIBS"

#temporary (for make dist testing)
AC_SUBST(VERSION,${real_version})
AC_SUBST(PACKAGE_VERSION,${real_version})

AC_CONFIG_FILES([Makefile
	   src/Makefile])
AC_OUTPUT

#########################################################

#fs="no";
#test "$gtk2_fullscreen" = "1" && fs="yes"

#the summary
echo ""
echo ""
echo "Configuration summary for ${PACKAGE_NAME} ${real_version}:"
echo ""
echo "  Compiler:               ${CC}"
echo "  Target directory:       ${prefix}"
echo "  Imlib2 version:         ${imlib2_ver}"
echo "  GTK+2 version:          ${gtk2_ver}"
#echo "   fullscreen enabled:    ${fs}"
echo ""
#bug-prone trickery
if test "x$cflags_b" != x -o "x$ldflags_b" != x -o "x$cppflags_b" != x; then
  echo "Supplied FLAGS:"
  echo ""
  test "x$cflags_b" != x && echo "  CFLAGS=$cflags_b"
  test "x$ldflags_b" != x && echo "  LDFLAGS=$ldflags_b"
  test "x$cppflags_b" != x && echo "  CPPFLAGS=$cppflags_b"
  echo ""
fi
echo "Use 'make' to compile the program."
